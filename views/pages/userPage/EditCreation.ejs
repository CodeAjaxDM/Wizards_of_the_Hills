<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
  <meta name="description" content="">
  <meta name="editCreation" content="">
  <link rel="icon" href="../../favicon.ico">

  <title>Edit Creation Page</title>

  <!-- Bootstrap core CSS -->
  <link rel="stylesheet" href="/css/bootstrap.min.css" />
  <!-- Custom styles for this template -->
  <link href="../../stylesheets/userPages.css" rel="stylesheet">
  <script src="userPages.js"></script>

</head>

<body>
  <%- include('../../header.ejs') %>

  <div class="container">
    <div class="nav-spacer"></div>
    <div class="text-center mt-4"> <!-- Center align and add margin top -->
      <a href="/pages/userPage/creatorPage">
        <h4>Back to My Content Creator Page </h4>
      </a>
    </div>   
    <div class="row">
      <div class="col-md-6">


        <!-- Item Image -->
        <form method="POST" action="/pages/userPage/EditCreation" enctype="multipart/form-data">
        <input type="hidden" name="existingImagePath" value="<%= imagePath %>">
        <input type="hidden" name="itemNumber" value="<%= itemNumber || '' %>">
          <img src="<%= imagePath %>" alt="Item Image" class="img-fluid item-image">
        <div class="tiny-spacer"></div>
        <button type="button" class="btn btn-secondary" id="editImageButton">Edit Display Image</button>
        <input type="file" id="imageUpload" name="displayImage" style="display:none;">
      </div>      
      <div class="col-md-6">

    <!-- Item Details Form -->
      <h2>Edit Item Details</h2>
        <div class="form-group">
          <label for="title">Title</label>
          <input type="text" class="form-control" id="title" name="title" placeholder="Enter title" value="<%= title %>" required>
        </div>
        <div class="form-group">
          <label for="description">Description</label>
          <textarea class="form-control" id="description" rows="3" name="description" placeholder="Enter description" required><%= description %></textarea>
        </div>
        <div class="form-group">
          <label for="price">Price</label>
          <input type="number" class="form-control" id="price" placeholder="Enter price" name="price" value="<%= price %>" required step="0.01" pattern="^\d+(\.\d{1,2})?$">
          <small class="form-text text-muted">Please enter a valid dollar amount (e.g., 10.99).</small>
        </div>

          <div id="fileInputs">
            <!-- Initial file input field -->
            <div class="form-group">
              <label for="file1">Content File(s) User Gets on Purchase</label>
              <div class="custom-file">
                <input type="file" class="custom-file-input" id="file1" name="file1">
                <label class="custom-file-label" for="file1">Choose file</label>
              </div>
            </div>
          </div>
          <div>
            <button type="button" class="btn btn-primary" id="addFileInput">Add Another File</button>
          </div>
          <!-- Add more form fields as needed -->

           <!-- Publish/Unpublish Options -->
          <div class="form-group">
            <label>Publish Status</label><br>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="publishStatus" id="publish" value="publish" <% if (publishStatus === 'publish') { %>checked<% } %>>
                <label class="form-check-label" for="publish">Publish</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="publishStatus" id="unpublish" value="unpublish" <% if (publishStatus === 'unpublish') { %>checked<% } %>>
                <label class="form-check-label" for="unpublish">Unpublish</label>
            </div>
          </div>
          <div class="tiny-spacer"></div>
        </form>
      </div>
    </div>
    <div class="text-center mt-4"> <!-- Center align and add margin top -->
      <button type="submit" class="btn btn-primary btn-lg mr-2" name="action" value="save">Save Changes</button> <!-- Large primary button with margin right -->
      <button type="submit" class="btn btn-danger btn-lg" name="action" value="discard">Discard Changes</button> <!-- Large red button -->
    </div>
  </form>
    <div class="text-center mt-4"> <!-- Center align and add margin top -->
      <a href="/pages/userPage/creatorPage">
        <h4>Back to My Content Creator Page </h4>
      </a>
    </div>    
  </div>

  </div>

  <div class="big-spacer"></div>
  <div class="big-spacer"></div>
  <div class="big-spacer"></div>
  <div class="big-spacer"></div>
  <%- include('../../footer.ejs') %>


  <!-- Bootstrap core JavaScript
    ================================================== -->
  <!-- Placed at the end of the document so the pages load faster -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
  <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>
  <script src="/js/bootstrap.min.js"></script>
  <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
  <script src="../../assets/js/ie10-viewport-bug-workaround.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Counter for tracking file input fields
        let fileInputCounter = 1;

        // Function to add another file input field
        function addFileInput() {
            fileInputCounter++; // Increment counter
            const fileInputsDiv = document.getElementById('fileInputs');

            // Create new file input field
            const newFileInput = document.createElement('div');
            newFileInput.classList.add('form-group');
            newFileInput.innerHTML = `
                <label for="file${fileInputCounter}">Upload File</label>
                <div class="custom-file">
                    <input type="file" class="custom-file-input" id="file${fileInputCounter}" name="file${fileInputCounter}">
                    <label class="custom-file-label" for="file${fileInputCounter}">Choose file</label>
                </div>
            `;
            fileInputsDiv.appendChild(newFileInput);
        }

        // Event listener for the add file input button
        document.getElementById('addFileInput').addEventListener('click', addFileInput);
    });

    document.addEventListener('DOMContentLoaded', function() {
      const editImageButton = document.getElementById('editImageButton');
      const imageUpload = document.getElementById('imageUpload');
    
      editImageButton.addEventListener('click', function() {
        imageUpload.click();
      });
    
      imageUpload.addEventListener('change', function() {
        const file = this.files[0];
        if (file) {
          const reader = new FileReader();
    
          reader.addEventListener('load', function() {
            const img = document.querySelector('.item-image');
            img.src = reader.result;
          });
    
          reader.readAsDataURL(file);
        }
      });
    });

    document.addEventListener('DOMContentLoaded', function() {
      // Event listener for the Save Changes button
      document.querySelector('[name="action"][value="save"]').addEventListener('click', function() {
          saveChanges();
      });
  
      // Event listener for the Discard Changes button
      document.querySelector('[name="action"][value="discard"]').addEventListener('click', function() {
          discardChanges();
      });
  });
    
  function saveChanges() {
    const form = document.querySelector('form');
    const formData = new FormData(form);

    fetch('/pages/userPage/EditCreation', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Changes saved successfully');
            // Redirect to the content creator page
            window.location.href = '/pages/userPage/creatorPage';
        } else {
            alert('Failed to save changes: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Error saving changes:', error);
        alert('An error occurred while saving changes');
    });
  }

  
  function discardChanges() {
      // Reset form fields to their original values
      const form = document.querySelector('form');
      form.reset(); // Reset the form to clear all fields
  
      // If you want to keep the image and some other elements unchanged
      // Update them back to their original values
      const img = document.querySelector('.item-image');
      img.src = img.dataset.originalSrc; // Assuming you've set a data-original-src attribute on the image
  
      // Optionally, you can redirect the user back to the Edit Creation page
      window.location.href = '/pages/userPage/creatorPage';
  }
  
    </script>

</body>

</html>