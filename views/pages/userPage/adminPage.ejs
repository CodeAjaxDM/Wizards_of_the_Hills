<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
  <meta name="description" content="">
  <meta name="creator" content="">
  <link rel="icon" href="../../favicon.ico">

  <title>Admin Page</title>

  <!-- Bootstrap core CSS -->
  <link rel="stylesheet" href="/css/bootstrap.min.css" />
  <!-- Custom styles for this template -->
  <link href="../../stylesheets/userPages.css" rel="stylesheet">
  <script src="userPages.js"></script>
</head>

<body>
  <%- include('../../header.ejs') %>
  <div class="container">
  <div class="container mt-5">
    <h2 class="text-center">Admin Actions</h2>
    
    <!-- Reset Database Button -->
    <div class="text-center mb-5">
        <button class="btn btn-danger btn-lg" id="resetDbBtn">Reset Database</button>
    </div>
    
    <!-- Admin Actions -->
    <div class="admin-action-row">
  
    <!-- Get All Users Section -->
    <div class="admin-action-section">
        <button class="btn btn-primary btn-lg" id="getAllUsersBtn">Get All Users</button>
        <table class="table table-bordered" id="usersTable" style="display:none;">
        <thead>
          <tr>
            <th>Username</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody id="usersTableBody">
          <!-- User rows will be populated here -->
        </tbody>
      </table>
      <button class="btn btn-secondary btn-sm toggle-table" data-target="usersTable">Toggle Users Table</button>
    </div>
    
    <!-- Get All Items Section -->
    <div class="admin-action-section">
    <button class="btn btn-info btn-lg" id="getAllItemsBtn">Get All Items</button>
    <table class="table table-bordered" id="itemsTable" style="display:none;">
        <thead>
          <tr>
            <th>Item Number</th>
            <th>Title</th>
            <th>Author Name</th>
          </tr>
        </thead>
        <tbody id="itemsTableBody">
          <!-- Item rows will be populated here -->
        </tbody>
      </table>
      <button class="btn btn-secondary btn-sm toggle-table" data-target="itemsTable">Toggle Items Table</button>
    </div>

    <!-- Get All Authors Section -->
<div class="admin-action-section">
  <button class="btn btn-warning btn-lg" id="getAllAuthorsBtn">Get All Authors</button>
  <table class="table table-bordered" id="authorsTable" style="display:none;">
      <thead>
        <tr>
          <th>Author Name</th>
          <th>About</th>
          <th>Author Img</th>
        </tr>
      </thead>
      <tbody id="authorsTableBody">
        <!-- Author rows will be populated here -->
      </tbody>
  </table>
  <button class="btn btn-secondary btn-sm toggle-table" data-target="authorsTable">Toggle Authors Table</button>
</div>
    
  </div>

  
  </div>

  <!-- Get All Purchases Section -->
<div class="admin-action-section">
  <button class="btn btn-success btn-lg" id="getAllPurchasesBtn">Get All Purchases</button>
  <table class="table table-bordered" id="purchasesTable" style="display:none;">
    <thead>
      <tr>
        <th>Item Number</th>
        <th>Username</th>
      </tr>
    </thead>
    <tbody id="purchasesTableBody">
      <!-- Purchase rows will be populated here -->
    </tbody>
  </table>
  <button class="btn btn-secondary btn-sm toggle-table" data-target="purchasesTable">Toggle Purchases Table</button>
</div>
  </div>

  <%- include('../../footer.ejs') %>

  <!-- Bootstrap core JavaScript
    ================================================== -->
  <!-- Placed at the end of the document so the pages load faster -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
  <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>
  <script src="/js/bootstrap.min.js"></script>
  <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
  <script src="../../assets/js/ie10-viewport-bug-workaround.js"></script>
</body>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Reset Database Button
        const resetDbBtn = document.getElementById('resetDbBtn');
        resetDbBtn.addEventListener('click', function() {
          if (confirm('Are you sure you want to reset the database?')) {
            fetch('/resetDatabase')
              .then(response => response.json())
              .then(data => {
                alert(data.msg);
              });
          }
        });      

  const getAllUsersBtn = document.getElementById('getAllUsersBtn');
  const usersTable = document.getElementById('usersTable');
  const usersTableBody = document.getElementById('usersTableBody');

  getAllUsersBtn.addEventListener('click', function() {
    fetch('/getAllUsers')
      .then(response => response.json())
      .then(users => {
        usersTable.style.display = 'table';
        usersTableBody.innerHTML = '';
        users.forEach(user => {
          const row = `<tr>
                        <td>${user.username}</td>
                        <td><button class="btn btn-danger ban-user-btn" data-username="${user.username}">Ban</button></td>
                      </tr>`;
          usersTableBody.innerHTML += row;
        });
        
        // Add event listeners to the newly generated ban buttons
        const banUserButtons = document.querySelectorAll('.ban-user-btn');
        banUserButtons.forEach(button => {
          button.addEventListener('click', function() {
            const usernameToBan = this.getAttribute('data-username');
      
            if (confirm(`Are you sure you want to ban ${usernameToBan}?`)) {
              fetch('/banUser', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ username: usernameToBan }),
              })
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  alert(data.message);
                  // Refresh the page or update the user list
                  window.location.reload();
                } else {
                  alert(data.message);
                }
              })
              .catch(error => {
                console.error('Error banning user:', error);
                alert('Error banning user');
            });
          }
        });
      });
    });
  });


        // Get All Items Button
        const getAllItemsBtn = document.getElementById('getAllItemsBtn');
        const itemsTable = document.getElementById('itemsTable');
        const itemsTableBody = document.getElementById('itemsTableBody');
        
        getAllItemsBtn.addEventListener('click', function() {
          fetch('/getAllItems')
            .then(response => response.json())
            .then(items => {
              itemsTable.style.display = 'table';
              itemsTableBody.innerHTML = '';
              items.forEach(item => {
                const row = `<tr>
                              <td>${item.itemNumber}</td>
                              <td>${item.name}</td>
                              <td>${item.authorName}</td>
                            </tr>`;
                itemsTableBody.innerHTML += row;
              });
            });
        });

// Get All Purchases Button
const getAllPurchasesBtn = document.getElementById('getAllPurchasesBtn');
const purchasesTable = document.getElementById('purchasesTable');
const purchasesTableBody = document.getElementById('purchasesTableBody');

getAllPurchasesBtn.addEventListener('click', function() {
  fetch('/getPurchasesForAdmin')
    .then(response => response.json())
    .then(purchases => {
      // Filter out duplicates based on itemNumber and username
      const distinctPurchases = Array.from(new Set(purchases.map(a => a.itemNumber + '|' + a.username)))
        .map(item => {
          const parts = item.split('|');
          return {
            itemNumber: parts[0],
            username: parts[1]
          };
        });

      purchasesTable.style.display = 'table';
      purchasesTableBody.innerHTML = '';
      distinctPurchases.forEach(purchase => {
        const row = `<tr>
                      <td>${purchase.itemNumber}</td>
                      <td>${purchase.username}</td>
                    </tr>`;
        purchasesTableBody.innerHTML += row;
      });
    });
});

      
          // Fetch users
          fetch('/getAllUsers')
            .then(response => response.json())
            .then(users => {
              selectUser.innerHTML = '';
              users.forEach(user => {
                const option = `<option value="${user.username}">${user.username}</option>`;
                selectUser.innerHTML += option;
              });
            });
        });

        // Get All Authors Button
        const getAllAuthorsBtn = document.getElementById('getAllAuthorsBtn');
        const authorsTable = document.getElementById('authorsTable');
        const authorsTableBody = document.getElementById('authorsTableBody');

        getAllAuthorsBtn.addEventListener('click', function() {
          fetch('/getAllAuthors')
            .then(response => response.json())
            .then(authors => {
              authorsTable.style.display = 'table';
              authorsTableBody.innerHTML = '';
              authors.forEach(author => {
                const row = `<tr>
                              <td>${author.authorName}</td>
                              <td>${author.about || 'N/A'}</td>
                              <td><img src="${author.authorImg || '/images/default-author-img.jpg'}" style="max-width: 100px;"></td>
                            </tr>`;
                authorsTableBody.innerHTML += row;
              });
            });
        });

      document.addEventListener('DOMContentLoaded', function() {
        // Toggle Table Buttons
        const toggleTableButtons = document.querySelectorAll('.toggle-table');
        
        toggleTableButtons.forEach(button => {
            button.addEventListener('click', function() {
                const targetId = this.getAttribute('data-target');
                const targetTable = document.getElementById(targetId);
                
                if (targetTable.style.display === 'none' || targetTable.style.display === '') {
                    targetTable.style.display = 'table';
                } else {
                    targetTable.style.display = 'none';
                }
            });
        });
    });


    



</script>

</html>
